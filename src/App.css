#root {
  min-height: 100vh;
  position: relative;
  width: min(100%, clamp(22rem, 85%, 40rem));
  margin: auto;
  box-sizing: border-box;
  --root-padding: min(1rem, 4.5vw);
  padding: 0 var(--root-padding);
  display: flex;
  flex-flow: column;

}

#root::before,
#root::after {
  content: "";
  display: block;
}

#root::before {
  flex: 1;
  min-height: 5rem;
}

#root::after {
  flex: 2 1 0;
}

.aria-only {
  opacity: 0;
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  contain: strict;
  pointer-events: none;
}


:has(> :is(.absolute-fit, .absolute-center)) {
  position: relative;
}

.absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}


.absolute-fit {
  position: absolute;
  bottom: 0;
  right: 0;
  top: 0;
  left: 0;
}

.column {
  display: flex;
  flex-flow: column;
}
.content-width {
  width: fit-content;
}
.row {
  display: flex;
}

.row-reverse {
  display: flex;
  flex-flow: row-reverse;
  justify-content: start;
}

.row-wrap {
  display: flex;
  flex-flow: row wrap;
}

.text-gap {
  gap: .6em;
}

.flex-center {
  justify-content: center;
}

.flex-middle {
  align-items: center;
}

.flex-grow {
  flex-grow: 1;
}

#pages:has(+ .loader.loading) * {
  pointer-events: none !important;
}


.menu-column {
  display: flex;
  flex-flow: column;
  row-gap: .9rem;
}
.menu-gap-row {
  display: flex;
  flex-flow: row wrap;
  gap: 1rem 2rem;
}
.menu-span {
  padding: 1em 0;
}
button.menu-span {
  padding: 1em 1.5em;
  border-radius: 10px;
  color: white;
  appearance: none;
  border: none;
  background-color: var(--secondcolor)
}

button.menu-span:first-of-type {
  background-color: var(--maincolor)
}

button.menu-span::after {
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  right: 0;
  content: "";
  visibility: hidden;
  opacity: 0;
  background: white;
  transition: visibility 0s .2s, opacity .1s ease-out;
}

button:is(.menu-span:hover, .menu-span:focus-within)::after {
  opacity: .25;
  visibility: visible;
  transition: opacity .15s ease;
}
button.menu-span:active::after {
  opacity: .5;
}
.menu-tag {
  padding: .5em 0;
}

.tag-shift-l {
  margin-left: calc(var(--root-padding) * -.5)
}

.menu-block {
  background-color: white;
  box-sizing: border-box;
  margin: .5em 0;
}

.menu-block,
.menu-block .menu-input {
  padding: 1.1rem 1.6rem;
  width: 100%;
  border-radius: 10px;
}

.menu-block .menu-input {
  margin: -1.1rem -1.6rem;
  box-sizing: content-box;
  width: 100%;
  height: 100%;
  border: none;
  font-size: 105%;
}

.menu-block :is(.menu-span, .menu-input), button.menu-span {
  outline: none !important;
}
:is(.menu-block, button.menu-span):focus-within,
:is(.menu-block, button.menu-span):hover {  
  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);
}

.menu-block a,
a.menu-block {
  color: inherit;
  text-decoration: none;
}

.outline-hover {
  position: relative;
  overflow: hidden;
}

.outline-hover::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--maincolor);
  opacity: 0;
}


:is(.outline-hover:hover, .outline-hover:focus-within)::before {
  opacity: .1;
}